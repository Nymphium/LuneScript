import test.sub;

fn func( val : int) {
    print( "abc%s%s" (val,"ab") );
    print( "%X" ("123"[2]) );
    forsort val, key in { "C": 3, "A": 1, "B": 2 } {
	print( key, val );
    }
}
let data : int = 20;
func( data );


pub class ClassA {
    let val: int;
    fn __init() {
	self.val = 10;
	return self;
    }
    pub fn func( data: int ) : int {
	self.val = self.val + 1;
	return data + self.val;
    }
}

pub fn ClassA.sub() : int {
    return self.val;
}

pub class Super {
    pub fn sub(): int {
        return 1;
    }
}

pub class ClassB extend Super {
    pub fn func(): int {
	return 100;
    }
    pub fn func2(): sub.Hoge {
        return new sub.Hoge( 1 );
    }
}

let classB = new ClassB();
print( "classB.sub", classB.sub() );


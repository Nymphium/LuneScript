make[1]: Entering directory 'NDIR'
lua5.3 base.lua test/test.lns
EOF
: Root 
  : Comment '''[jioejiopjiofjeioajeji
jfeioajfeioaji
'''
  : Comment ''hogehogheo"""fjiojioe"""
  : Comment ''
  : Comment '''fjioeajio
'''
  : StmtExp 
    : LiteralString """'''jfiojeiojaoe''"""
  : DeclVar  val1 val2
    : ExpList 
      : LiteralChar 97(?a)
      : LiteralNum 1.0(1.0)
  : DeclVar  val3 val4 val5
    : ExpList 
      : LiteralNum 1(0x1)
      : LiteralNum 0.01(1.0e-2)
      : LiteralNum 100.0(0.1e+3)
  : DeclVar  val6
    : ExpList 
      : LiteralList []
  : DeclVar  val7
    : ExpList 
      : LiteralArray [@]
        : ExpList 
          : LiteralNum 1(1)
          : LiteralNum 2(2)
          : LiteralNum 3(3)
  : DeclVar  val8
    : ExpList 
      : LiteralString "1234\""
  : DeclVar  val9 val10
    : ExpList 
      : LiteralString "'1234'"
      : LiteralString """:a23"""
  : DeclVar  val11
    : ExpList 
      : LiteralMap 
        : LiteralString "A"
        : LiteralMap 
          : LiteralString "AA"
          : LiteralNum 1(1)
        : LiteralString "B"
        : LiteralMap 
          : LiteralString "BB"
          : LiteralNum 2(2)
  : StmtExp 
    : ExpOp2 =
      : RefField AA
        : RefField A
          : ExpRef val11
      : LiteralNum 3(3)
  : DeclFunc plus1_2
    : DeclArg val1
      : RefType int
    : DeclArg val2
      : RefType int
    : DeclArg val3
      : RefType int
    : DeclArg val4
      : RefType &mut int
    : RefType int
    : RefType int
    : Block 
      : StmtExp 
        : ExpOp2 =
          : ExpRef val1
          : ExpOp1 -
            : ExpOp2 @
              : LiteralNum 10(10)
              : ExpOp2 +
                : ExpRef int
                : ExpOp2 +
                  : ExpRef val2
                  : ExpRefItem seq[exp]
                    : ExpRef val3
                    : LiteralNum 1(1)
      : Block 
        : StmtExp 
          : ExpOp2 =
            : ExpRef val2
            : ExpRef val3
        : StmtExp 
          : ExpOp2 =
            : ExpRef val4
            : ExpRef val6
        : If 
        if
          : ExpOp2 ==
            : ExpRef val10
            : LiteralString ""
          : Block 
            : While 
              : LiteralBool true
              : Block 
                : Break 
        elseif
          : ExpRef val1
          : Block 
            : Repeat 
              : Block 
              : LiteralBool false
        elseif
          : ExpRef val1
          : Block 
            : For nil
              : LiteralNum 1(1)
              : LiteralNum 10(10)
              : LiteralNum 1(1)
              : Block 
        else
          : Block 
            : Apply val sub 
              : ExpCall 
                : ExpRef pairs
                : ExpList 
                  : ExpRef val7
              : Block 
                : Foreach item index 
                  : ExpRef val6
                  : Block 
      : Return 
        : ExpList 
          : ExpOp2 +
            : ExpRef val1
            : LiteralNum 1(1)
          : ExpOp2 +
            : ExpRef val2
            : LiteralNum 1(1)
  : DeclFunc plus2
    : DeclArg val1
      : RefType int
    : DeclArgDDD ...
    : RefType int
    : Block 
      : StmtExp 
        : ExpCall 
          : ExpRef print
          : ExpList 
            : ExpDDD ...
make[1]: Leaving directory 'NDIR'
